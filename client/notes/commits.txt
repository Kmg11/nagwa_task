===================================================================================

This file tracks changes, commits, and feature planning, streamlining the development process and maximizing productivity. It's an essential tool for staying organized and on track.

===================================================================================

Start Frontend Project | Install Packages | Config | Create Main Structure

- Clean files
- Handle absolute imports

- Uninstall unnecessary packages
	- @testing-library/jest-dom
	- @testing-library/react
	- @testing-library/user-event
	- @types/jest

- Setup eslint and prettier
	- Install eslint
	- Install @typescript-eslint/eslint-plugin
	- Install eslint-plugin-react
	- Install @typescript-eslint/parser
	- Install prettier
	- Install eslint-config-prettier
	- Install eslint-plugin-prettier
	- Add format and format:fix scripts to package.json
	- Config eslint and prettier

- Setup tailwindcss
	- Install tailwindcss
	- Config tailwindcss

- Create styles folder for global styles

===================================================================================

Add default styles | Create Question component | Create Container component | Create [WordType, PosType]

- Create global styles
- Create @types folder
- Create WordType
- Create PosType
- Create components folder
- Create layout folder
- Create Container component
- Create Question component

===================================================================================

Create ProgressBar component | Turn off indent from eslint to fix conflict with prettier

- Turn off indent from eslint to fix conflict with prettier
- Create ProgressBar component

===================================================================================

Create Welcome component | Create Activity component | Handle start activity

- Create Welcome component
- Create Activity component
- Handle start activity

===================================================================================

Structure Enhancements | Create AppButton component | Restructure components folder

- Create components/ui folder
- Create components/main folder
- Move [ Activity, ProgressBar, Question, Welcome ] components to components/main folder
- Create AppButton component
- Replace Welcome component button with AppButton component
- Move [ ProgressBar, Question ] components to Activity component

===================================================================================

Create ActivityFooter component | Create AppContext, AppProvider and useAppContext hook | Handle exit activity

- Create ActivityFooter component 
	- Exit Button
	- Check Answer Button
	- Next Question Button
	- Submit Button if last question
- Create AppContext, AppProvider and useAppContext hook
- Create openActivity and exitActivity functions
- Handle exit activity
- Use useAppContext hook in Welcome component
- Remove WelcomeProps interface

===================================================================================

Create ActivityContext | Create activityReducer | Create QuestionType

- Create QuestionType
- Create useActivity hook to handle activity state and functionality
- Create activityReducer
- Create [setActivity, checkAnswer, nextQuestion] actions
- Create [ ActivityActionTypeEnum, ActivityState, SetActivityAction, CheckAnswerAction, NextQuestionAction, ActivityAction ] types
- Create ActivityContext, ActivityProvider and useActivityContext hook

===================================================================================

Connect ActivityContext and activityReducer with Activity components | Handle select answer | Handle check answer

- Connect ActivityContext and activityReducer with [ ProgressBar, Question, ActivityFooter ] components
- Create selectAnswer action
- Create selectAnswer function
- Handle select answer
- Handle check answer
- Block select answer if question is checked
- Block check if no answer selected

===================================================================================

Create ScoreScreen component | Enhance activityReducer | Enhance responsive

- Create AnswerButton component
- Enhance activityReducer
- Enhance responsive

===================================================================================

Enhance styles | Create Score component | Handle try again | Add correctAnswersCount to activityReducer

- Enhance styles
- Replace startActivity state in App with currentScreen state
- Create Score component
- Handle show score screen
- Handle submit activity
- Handle try again
- Fix AnswerButton correct color problem
- Add correctAnswersCount to activityReducer

===================================================================================

Connect api with frontend | Create useGetWordsQuery and useGetRankMutation hook | Create AppLoading and AppErrorMessage component

- Create .env and .env.example files
- Add REACT_APP_API_URL to .env.example file
- Add REACT_APP_API_URL to .env file
- Install react-query
- Install axios
- Create api folder
- Create useGetWordsQuery hook
- Create useGetRankMutation hook
- Create ApiErrorResponseType
- Create AppLoading component
- Create AppErrorMessage component
- Connect useGetWordsQuery hook with Activity component
- Add AppLoading and ErrorMessage to Activity component
- Connect useGetRankMutation hook with Score component
- Add AppLoading and ErrorMessage to Score component

===================================================================================

Fix check active color

===================================================================================